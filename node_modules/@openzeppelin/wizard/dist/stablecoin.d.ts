import { Contract } from './contract';
import { CommonOptions } from './common-options';
import { ClockMode } from './set-clock-mode';
export interface StablecoinOptions extends CommonOptions {
    name: string;
    symbol: string;
    burnable?: boolean;
    pausable?: boolean;
    premint?: string;
    mintable?: boolean;
    permit?: boolean;
    limitations?: false | "allowlist" | "blocklist";
    /**
     * Whether to keep track of historical balances for voting in on-chain governance, and optionally specify the clock mode.
     * Setting `true` is equivalent to 'blocknumber'. Setting a clock mode implies voting is enabled.
     */
    votes?: boolean | ClockMode;
    flashmint?: boolean;
    custodian?: boolean;
}
export declare const defaults: Required<StablecoinOptions>;
export declare function printStablecoin(opts?: StablecoinOptions): string;
export declare function isAccessControlRequired(opts: Partial<StablecoinOptions>): boolean;
export declare function buildStablecoin(opts: StablecoinOptions): Contract;
export declare const premintPattern: RegExp;
//# sourceMappingURL=stablecoin.d.ts.map