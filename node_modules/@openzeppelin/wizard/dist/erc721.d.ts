import { Contract } from './contract';
import { CommonOptions } from './common-options';
import { ClockMode } from './set-clock-mode';
export interface ERC721Options extends CommonOptions {
    name: string;
    symbol: string;
    baseUri?: string;
    enumerable?: boolean;
    uriStorage?: boolean;
    burnable?: boolean;
    pausable?: boolean;
    mintable?: boolean;
    incremental?: boolean;
    /**
     * Whether to keep track of individual units for voting in on-chain governance, and optionally specify the clock mode.
     * Setting `true` is equivalent to 'blocknumber'. Setting a clock mode implies voting is enabled.
     */
    votes?: boolean | ClockMode;
}
export declare const defaults: Required<ERC721Options>;
export declare function printERC721(opts?: ERC721Options): string;
export declare function isAccessControlRequired(opts: Partial<ERC721Options>): boolean;
export declare function buildERC721(opts: ERC721Options): Contract;
//# sourceMappingURL=erc721.d.ts.map